/******************************************************************************************************
  * FileName     : SmartLight_Basic
  * Description  : 스마트 가로등 코딩 키트 (기본)
  * Author       :
  * CopyRight    : (주)한국공학기술연구원(www.ketri.re.kr)
  * Created Date :
  * Modified     : 2022.01.12 : SCS : 소스 크린징
  * Modified     : 2022.11.23 : YSY : 소스 크린징, serial.begin(57600->115200),
  * Modified     : 2022.12.16 : YSY : 조도, 초음파 센서 임계치 수정, 주석 수정
  * Modified     : 2022.12.19 : YSY : ledpin->led, 주석수정
  * Modified     : 2022.12.21 : YSY : 변수 명명법 통일
 ******************************************************************************************************/
 
//-------------------------------------------------------------------------------------------------------
// ETBoard 핀번호 설정
//-------------------------------------------------------------------------------------------------------
const int cds_pin  = A3;                    // 조도 센서
const int echo_pin = D8;                    // 초음파 센서 수신부
const int trig_pin = D9;                    // 초음파 센서 송신부

const int green_led = D2;                   // 가로등 녹색 LED
const int blue_led  = D3;                   // 가로등 파란색 LED

const int cds_threshold = 800;              // 조도 센서 임계치
const int usw_threshold = 10;               // 초음파 센서 임계치


//=======================================================================================================
void setup()
//=======================================================================================================
{
    Serial.begin(115200);                   // 시리얼모니터 통신 속도 설정

    pinMode(trig_pin, OUTPUT);              // 초음파 센서 송신부 출력 모드 설정
    pinMode(echo_pin, INPUT);               // 초음파 센서 수신부 입력 모드 설정
  
    pinMode(green_led, OUTPUT);             // 녹색 LED 출력모드 설정
    pinMode(blue_led, OUTPUT);              // 파란색 LED 출력모드 설정

    pinMode(cds_pin, INPUT);                // 조도 센서를 입력모드로 설정
}


//=======================================================================================================
void loop()
//=======================================================================================================
{
    //---------------------------------------------------------------------------------------------------
    // 초음파 센서로 장애물과의 거리 구하기
    //---------------------------------------------------------------------------------------------------
    // 초음파 송신 후 수신부는 HIGH 상태로 대기
    digitalWrite(trig_pin, LOW);
    digitalWrite(echo_pin, LOW);
    delayMicroseconds(2);
    digitalWrite(trig_pin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trig_pin, LOW);

    // echo_pin이 HIGH를 유지한 시간 저장
    unsigned long duration = pulseIn(echo_pin, HIGH);

    // HIGH 였을 때 시간(초음파 송수신 시간)을 기준으로 거리를 계산
    float distance = ((float)(34 * duration) / 1000) / 2;
    Serial.print("초음파 센서 : ");
    Serial.print(distance);
    Serial.println("cm");
    
    //---------------------------------------------------------------------------------------------------
    // 조도 센서로 빛의 세기 구하기
    //---------------------------------------------------------------------------------------------------
    int cds_value = analogRead(cds_pin);    // 조도 센서 입력 확인
    Serial.print(" 조도 센서 : ");
    Serial.println(cds_value);
    Serial.println("---------------------");

    //---------------------------------------------------------------------------------------------------
    // 조도 센서를 이용하여 어두면 가로등의 녹색 LED 켜기, 밝으면 끄기
    // --------------------------------------------------------------------------------------------------
    // 밝기에 따라 green_led 제어
    if (cds_value < cds_threshold)          // 조도 센서값이 cds_threshold 미만이면
    {
        digitalWrite(green_led, HIGH);      // green_led 켜짐
    }
    else
    {
        digitalWrite(green_led, LOW);         // green_led 꺼짐
    }

    //---------------------------------------------------------------------------------------------------
    // 초음파 센서를 이용하여 장애물을 감지하여 파란 LED 켜기, 없으면 끄기
    //---------------------------------------------------------------------------------------------------
    // 장애물 감지 여부에 따라 blue_led 제어
    if (distance < usw_threshold)           // 거리가 usw_threshold 미만이면
    {
        digitalWrite(blue_led, HIGH);       // blue_led 켜짐
    }
    else
    {
        digitalWrite(blue_led, LOW);        // blue_led 꺼짐
    }

    delay(500);
}

//=======================================================================================================
//
// (주)한국공학기술연구원 http://et.ketri.re.kr
//
//=======================================================================================================
